/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -i commandmanager/commandmanager.h -c CommandManagerAdaptor -l CommandManager -a dbusadaptor/commandmanager_adaptor commandmanager.xml
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COMMANDMANAGER_ADAPTOR_H
#define COMMANDMANAGER_ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "commandmanager/commandmanager.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.filemanager.daemon.CommandManager
 */
class CommandManagerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.filemanager.daemon.CommandManager")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.filemanager.daemon.CommandManager\">\n"
"    <method name=\"process\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"cmd\"/>\n"
"      <arg direction=\"in\" type=\"as\" name=\"args\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"result\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"output\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"error\"/>\n"
"    </method>\n"
"    <method name=\"startDetached\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"cmd\"/>\n"
"      <arg direction=\"in\" type=\"as\" name=\"args\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"result\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    CommandManagerAdaptor(CommandManager *parent);
    virtual ~CommandManagerAdaptor();

    inline CommandManager *parent() const
    { return static_cast<CommandManager *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    bool process(const QString &cmd, const QStringList &args, QString &output, QString &error);
    bool startDetached(const QString &cmd, const QStringList &args);
Q_SIGNALS: // SIGNALS
};

#endif

/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -i deviceinfo/deviceinfomanager.h -c DeviceInfoManagerAdaptor -l DeviceInfoManager -a dbusadaptor/deviceinfomanager_adaptor deviceinfo.xml
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef DEVICEINFOMANAGER_ADAPTOR_H
#define DEVICEINFOMANAGER_ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "deviceinfo/deviceinfomanager.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.filemanager.daemon.DeviceInfoManager
 */
class DeviceInfoManagerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.filemanager.daemon.DeviceInfoManager")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.filemanager.daemon.DeviceInfoManager\">\n"
"    <method name=\"getPartitionByDevicePath\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"devicePath\"/>\n"
"      <arg direction=\"out\" type=\"(ssssssbtt)\"/>\n"
"      <annotation value=\"PartMan::Partition\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"readUsage\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"result\"/>\n"
"      <arg direction=\"out\" type=\"x\" name=\"freespace\"/>\n"
"      <arg direction=\"out\" type=\"x\" name=\"total\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    DeviceInfoManagerAdaptor(DeviceInfoManager *parent);
    virtual ~DeviceInfoManagerAdaptor();

    inline DeviceInfoManager *parent() const
    { return static_cast<DeviceInfoManager *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    PartMan::Partition getPartitionByDevicePath(const QString &devicePath);
    bool readUsage(const QString &path, qlonglong &freespace, qlonglong &total);
Q_SIGNALS: // SIGNALS
};

#endif
